@using HyperUI.Core
@using Microsoft.OpenApi.Models

@namespace HyperUI.Blazor.Internal

@if (_nestedProperties?.Any() == true)
{
	// Render read-only checkboxes for nested boolean properties
	foreach (NestedProperty nestedProperty in _nestedProperties)
	{
		if (nestedProperty.Type == OpenApiDataType.Boolean)
		{
			<MudCheckBox 
				         Checked="@nestedProperty.Value"
						 Class="@(nestedProperty.IsLast ? "" : "mr-7")"
						 Dense="true"
						 Disabled="@_isReadOnly"
						 Label="@nestedProperty.Title"
						 Style="margin-top: 6px;"/>
		}
	}
}

@code {
	// Read-only indicator
	private bool _isReadOnly = true;

	// Nested properties
	private IEnumerable<NestedProperty>? _nestedProperties;

	/// <summary>
	/// Read-only indicator. Applies to all nested properties and takes precedence over the 
	/// ReadOnly property in <see cref="ReferencedSchema"/>.
	/// </summary>
	[Parameter]
	public bool? IsReadOnly { get; set; }

	/// <summary>
	/// Referenced schema.
	/// </summary>
	[EditorRequired]
	[Parameter]
	public OpenApiSchema? ReferencedSchema { get; set; }

	/// <summary>
	/// Property value. This should be a complex object.
	/// </summary>
	[EditorRequired]
	[Parameter]
	public object? Value { get; set; }

	/// <inheritdoc />
	protected override void OnInitialized()
	{
		_isReadOnly = IsReadOnly.HasValue ? IsReadOnly.Value : ReferencedSchema?.ReadOnly ?? true;
		_nestedProperties = ReferencedSchema?.TryGetNestedProperties(Value);
	}

}
